#include "stm32f1xx.h"
#include "common.h"

// IO方向设置
#define MPU_SDA_IN()                     \
    {                                    \
        GPIOB->CRH &= 0X0FFFFFFF;        \
        GPIOB->CRH |= (uint32_t)8 << 28; \
    }
#define MPU_SDA_OUT()                    \
    {                                    \
        GPIOB->CRH &= 0X0FFFFFFF;        \
        GPIOB->CRH |= (uint32_t)3 << 28; \
    }

// IO操作函数
#define ICM_IIC_SCL PBout(13) // SCL
#define MPU_IIC_SDA PBout(15) // 输出SDA
#define MPU_READ_SDA PBin(15) // 输入SDA

// IIC所有操作函数
void icm_iic_delay(void);                     // MPU IIC延时函数
void icm_iic_init(void);                      // 初始化IIC的IO口
void icm_iic_start(void);                     // 发送IIC开始信号
void icm_iic_stop(void);                      // 发送IIC停止信号
void icm_iic_send_byte(uint8_t txd);          // IIC发送一个字节
uint8_t icm_iic_read_byte(unsigned char ack); // IIC读取一个字节
uint8_t icm_iic_wait_ack(void);               // IIC等待ACK信号
void icm_iic_ack(void);                       // IIC发送ACK信号
void icm_iic_nack(void);                      // IIC不发送ACK信号

uint8_t icm_write_byte(uint8_t devaddr, uint8_t reg, uint8_t data);
uint8_t icm_read_byte(uint8_t devaddr, uint8_t reg);
uint8_t icm_write_len(uint8_t addr, uint8_t reg, uint8_t len, uint8_t *buf);
uint8_t icm_read_len(uint8_t addr, uint8_t reg, uint8_t len, uint8_t *buf);

void icm_scanf_addr(void);